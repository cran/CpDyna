// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// GetGnu
arma::mat GetGnu(const arma::vec z, const arma::vec breaks, const arma::vec lIN, const arma::vec lOut);
RcppExport SEXP _CpDyna_GetGnu(SEXP zSEXP, SEXP breaksSEXP, SEXP lINSEXP, SEXP lOutSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec >::type z(zSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type breaks(breaksSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type lIN(lINSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type lOut(lOutSEXP);
    rcpp_result_gen = Rcpp::wrap(GetGnu(z, breaks, lIN, lOut));
    return rcpp_result_gen;
END_RCPP
}
// GnuToX
arma::cube GnuToX(Rcpp::NumericVector EGnu, Rcpp::NumericVector Eptn, int N);
RcppExport SEXP _CpDyna_GnuToX(SEXP EGnuSEXP, SEXP EptnSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type EGnu(EGnuSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Eptn(EptnSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(GnuToX(EGnu, Eptn, N));
    return rcpp_result_gen;
END_RCPP
}
// VM_MP
Rcpp::List VM_MP(Rcpp::NumericVector Etau, arma::vec ptn, Rcpp::NumericVector EGnu, bool PeltOrNot);
RcppExport SEXP _CpDyna_VM_MP(SEXP EtauSEXP, SEXP ptnSEXP, SEXP EGnuSEXP, SEXP PeltOrNotSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Etau(EtauSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ptn(ptnSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type EGnu(EGnuSEXP);
    Rcpp::traits::input_parameter< bool >::type PeltOrNot(PeltOrNotSEXP);
    rcpp_result_gen = Rcpp::wrap(VM_MP(Etau, ptn, EGnu, PeltOrNot));
    return rcpp_result_gen;
END_RCPP
}
// VM_MP_
Rcpp::List VM_MP_(Rcpp::NumericVector Etau, arma::vec ptn, Rcpp::NumericVector EGnu, bool PeltOrNot);
RcppExport SEXP _CpDyna_VM_MP_(SEXP EtauSEXP, SEXP ptnSEXP, SEXP EGnuSEXP, SEXP PeltOrNotSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Etau(EtauSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ptn(ptnSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type EGnu(EGnuSEXP);
    Rcpp::traits::input_parameter< bool >::type PeltOrNot(PeltOrNotSEXP);
    rcpp_result_gen = Rcpp::wrap(VM_MP_(Etau, ptn, EGnu, PeltOrNot));
    return rcpp_result_gen;
END_RCPP
}
// LowerBound_MP
double LowerBound_MP(Rcpp::NumericVector Etau, Rcpp::NumericVector EGnu, Rcpp::NumericVector ptn, arma::vec Pi, Rcpp::NumericVector Lbd);
RcppExport SEXP _CpDyna_LowerBound_MP(SEXP EtauSEXP, SEXP EGnuSEXP, SEXP ptnSEXP, SEXP PiSEXP, SEXP LbdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Etau(EtauSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type EGnu(EGnuSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type ptn(ptnSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Lbd(LbdSEXP);
    rcpp_result_gen = Rcpp::wrap(LowerBound_MP(Etau, EGnu, ptn, Pi, Lbd));
    return rcpp_result_gen;
END_RCPP
}
// VE_MP
arma::mat VE_MP(Rcpp::NumericVector Etau, Rcpp::NumericVector ptn, Rcpp::NumericVector Pi, Rcpp::NumericVector Lbd, Rcpp::NumericVector EX, Rcpp::NumericVector EGnu);
RcppExport SEXP _CpDyna_VE_MP(SEXP EtauSEXP, SEXP ptnSEXP, SEXP PiSEXP, SEXP LbdSEXP, SEXP EXSEXP, SEXP EGnuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Etau(EtauSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type ptn(ptnSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Lbd(LbdSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type EX(EXSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type EGnu(EGnuSEXP);
    rcpp_result_gen = Rcpp::wrap(VE_MP(Etau, ptn, Pi, Lbd, EX, EGnu));
    return rcpp_result_gen;
END_RCPP
}
// GetX
arma::cube GetX(const int U, const arma::vec ptn, const arma::vec z, const arma::vec breaks, const arma::vec lIN, const arma::vec lOut);
RcppExport SEXP _CpDyna_GetX(SEXP USEXP, SEXP ptnSEXP, SEXP zSEXP, SEXP breaksSEXP, SEXP lINSEXP, SEXP lOutSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type U(USEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type ptn(ptnSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type z(zSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type breaks(breaksSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type lIN(lINSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type lOut(lOutSEXP);
    rcpp_result_gen = Rcpp::wrap(GetX(U, ptn, z, breaks, lIN, lOut));
    return rcpp_result_gen;
END_RCPP
}
// VE_
arma::mat VE_(Rcpp::NumericVector Etau, Rcpp::NumericVector ptn, Rcpp::NumericVector ValuesAtPtn, Rcpp::NumericVector Pi, Rcpp::NumericVector Lbd, Rcpp::NumericVector EX);
RcppExport SEXP _CpDyna_VE_(SEXP EtauSEXP, SEXP ptnSEXP, SEXP ValuesAtPtnSEXP, SEXP PiSEXP, SEXP LbdSEXP, SEXP EXSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Etau(EtauSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type ptn(ptnSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type ValuesAtPtn(ValuesAtPtnSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Lbd(LbdSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type EX(EXSEXP);
    rcpp_result_gen = Rcpp::wrap(VE_(Etau, ptn, ValuesAtPtn, Pi, Lbd, EX));
    return rcpp_result_gen;
END_RCPP
}
// VM
Rcpp::List VM(Rcpp::NumericVector Etau, arma::vec ptn, Rcpp::NumericVector EX, bool PeltOrNot);
RcppExport SEXP _CpDyna_VM(SEXP EtauSEXP, SEXP ptnSEXP, SEXP EXSEXP, SEXP PeltOrNotSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Etau(EtauSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ptn(ptnSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type EX(EXSEXP);
    Rcpp::traits::input_parameter< bool >::type PeltOrNot(PeltOrNotSEXP);
    rcpp_result_gen = Rcpp::wrap(VM(Etau, ptn, EX, PeltOrNot));
    return rcpp_result_gen;
END_RCPP
}
// VM_
Rcpp::List VM_(Rcpp::NumericVector Etau, arma::vec ptn, Rcpp::NumericVector EX, bool PeltOrNot, bool MinimalPartition);
RcppExport SEXP _CpDyna_VM_(SEXP EtauSEXP, SEXP ptnSEXP, SEXP EXSEXP, SEXP PeltOrNotSEXP, SEXP MinimalPartitionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Etau(EtauSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ptn(ptnSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type EX(EXSEXP);
    Rcpp::traits::input_parameter< bool >::type PeltOrNot(PeltOrNotSEXP);
    Rcpp::traits::input_parameter< bool >::type MinimalPartition(MinimalPartitionSEXP);
    rcpp_result_gen = Rcpp::wrap(VM_(Etau, ptn, EX, PeltOrNot, MinimalPartition));
    return rcpp_result_gen;
END_RCPP
}
// LowerBound
double LowerBound(Rcpp::NumericVector Etau, Rcpp::NumericVector EX, Rcpp::NumericVector ptn, arma::vec Pi, Rcpp::NumericVector Lbd);
RcppExport SEXP _CpDyna_LowerBound(SEXP EtauSEXP, SEXP EXSEXP, SEXP ptnSEXP, SEXP PiSEXP, SEXP LbdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Etau(EtauSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type EX(EXSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type ptn(ptnSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Lbd(LbdSEXP);
    rcpp_result_gen = Rcpp::wrap(LowerBound(Etau, EX, ptn, Pi, Lbd));
    return rcpp_result_gen;
END_RCPP
}
// LowerBound_
double LowerBound_(Rcpp::NumericVector Etau, Rcpp::NumericVector EX, Rcpp::NumericVector ptn, arma::vec Pi, Rcpp::NumericVector Lbd, Rcpp::NumericVector LLbd, Rcpp::NumericVector ValuesAtPtn);
RcppExport SEXP _CpDyna_LowerBound_(SEXP EtauSEXP, SEXP EXSEXP, SEXP ptnSEXP, SEXP PiSEXP, SEXP LbdSEXP, SEXP LLbdSEXP, SEXP ValuesAtPtnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Etau(EtauSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type EX(EXSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type ptn(ptnSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Lbd(LbdSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type LLbd(LLbdSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type ValuesAtPtn(ValuesAtPtnSEXP);
    rcpp_result_gen = Rcpp::wrap(LowerBound_(Etau, EX, ptn, Pi, Lbd, LLbd, ValuesAtPtn));
    return rcpp_result_gen;
END_RCPP
}
// GetDistance
arma::mat GetDistance(Rcpp::NumericVector EX);
RcppExport SEXP _CpDyna_GetDistance(SEXP EXSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type EX(EXSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDistance(EX));
    return rcpp_result_gen;
END_RCPP
}
// GetDistance2
arma::mat GetDistance2(Rcpp::NumericVector EX);
RcppExport SEXP _CpDyna_GetDistance2(SEXP EXSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type EX(EXSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDistance2(EX));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_CpDyna_GetGnu", (DL_FUNC) &_CpDyna_GetGnu, 4},
    {"_CpDyna_GnuToX", (DL_FUNC) &_CpDyna_GnuToX, 3},
    {"_CpDyna_VM_MP", (DL_FUNC) &_CpDyna_VM_MP, 4},
    {"_CpDyna_VM_MP_", (DL_FUNC) &_CpDyna_VM_MP_, 4},
    {"_CpDyna_LowerBound_MP", (DL_FUNC) &_CpDyna_LowerBound_MP, 5},
    {"_CpDyna_VE_MP", (DL_FUNC) &_CpDyna_VE_MP, 6},
    {"_CpDyna_GetX", (DL_FUNC) &_CpDyna_GetX, 6},
    {"_CpDyna_VE_", (DL_FUNC) &_CpDyna_VE_, 6},
    {"_CpDyna_VM", (DL_FUNC) &_CpDyna_VM, 4},
    {"_CpDyna_VM_", (DL_FUNC) &_CpDyna_VM_, 5},
    {"_CpDyna_LowerBound", (DL_FUNC) &_CpDyna_LowerBound, 5},
    {"_CpDyna_LowerBound_", (DL_FUNC) &_CpDyna_LowerBound_, 7},
    {"_CpDyna_GetDistance", (DL_FUNC) &_CpDyna_GetDistance, 1},
    {"_CpDyna_GetDistance2", (DL_FUNC) &_CpDyna_GetDistance2, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_CpDyna(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
